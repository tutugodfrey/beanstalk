{"version":3,"sources":["services/networkService.ts","models.ts","services/categoriesService.ts","services/userService.ts","services/imageService.ts","services/services.ts","images/unicorn.png","components/header.tsx","components/ellipsis.tsx","components/categories.tsx","components/filmstrip.tsx","components/lightbox.tsx","components/meta.tsx","pages/home.tsx","components/form.tsx","components/textbox.tsx","components/alert.tsx","components/loginbox.tsx","components/label.tsx","components/userdetails.tsx","pages/user.tsx","pages/editcategory.tsx","components/listbox.tsx","pages/editimage.tsx","pages/newimage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["NetworkService","apiBase","axios","require","default","appState","token","this","method","result","url","get","headers","GetHeaders","data","postData","onProgress","config","undefined","console","log","post","put","delete","Factory","obj","Id","id","Name","displayName","Username","username","CreateStamp","Date","createStamp","UpdateStamp","updateStamp","Enabled","enabled","name","user","UserSummaryFromApi","createdBy","CreatedBy","category","CategorySummaryFromApi","Width","width","Height","height","Tags","tags","Size","size","Extension","exension","Category","Uri","uri","ThumbUri","thumburi","CategoriesService","network","results","Get","forEach","r","push","Models","CategoryFromApi","ImageFromApi","Post","netRes","categoryId","Put","Delete","status","UsersService","password","body","UserFromAPI","SessionId","sessionId","User","ImagesService","newImageForm","image","imageId","categoryid","Services","newApiRoot","networkService","Categories","Users","Images","SetUserAuth","header","state","SearchString","props","style","headerStyle","userDetailsStyle","type","placeholder","value","onChange","event","setState","target","onClick","OnSearch","disabled","to","currentUserStyle","logoStyle","src","logo","alt","awsLettersStyle","Component","display","position","top","left","right","lineHeight","fontSize","color","background","paddingLeft","paddingRight","fontVariant","zIndex","float","marginLeft","marginRight","cursor","fontWeight","textDecoration","ellipsis","textAlign","className","categories","panelStyle","length","map","catStyle","categoryStyle","SelectCategoryId","categoryStyleSelected","editor","EditEnabled","icon","faEdit","OnSelectCategory","faFolderPlus","bottom","borderRight","paddingTop","borderBottom","marginBottom","marginTop","filmstrip","footerPanelStyle","imgStyle","imageStyle","SelectedImageId","imageSelectedStyle","imageFrameStyle","imageContentFrameStyle","OnSelectImage","addImageStyle","faPlusCircle","borderTop","verticalAlign","overflowX","padding","border","objectFit","backgroundColor","lightbox","lightboxStyle","itemStyle","lightboxImageStyle","boxSizing","meta","stamp","format","moment","fileSizeInBytes","i","Math","max","toFixed","Image","dlStyle","dtStyle","ddStyle","ReadableFileSizeString","parseInt","FormatDate","tag","tagStyle","borderLeft","gridTemplate","margin","WebkitBorderRadius","borderRadius","home","find","canEdit","CurrentUser","Fragment","OnSetCategory","OnSetImage","form","buttonsDisabled","buttonDiv","deleteDiv","DeleteTitle","OnDelete","deleteDivStyle","OkTitle","CancelTitle","buttonDivStyle","OnCancel","OnOK","formFrameStyle","formHeadingStyle","Heading","formBodyStyle","FormId","onSubmit","e","preventDefault","children","clear","Textbox","textBoxType","Type","inputFrameStyle","inputTitleStyle","Title","Value","inputStyle","OnChange","onKeyDown","OnEnter","key","alert","Visable","alertStyle","OnDismiss","Header","Loginbox","Password","ErrorMessage","doLogin","a","Login","OnLogin","nv","Label","labelFrameStyle","labelTitleStyle","labelValueStyle","UserDetails","OnLogout","isLoggedIn","SessionKey","EditCategory","CategoryId","PageTitle","CanDelete","doCommit","success","CreateCategory","UpdateCategory","UpdateCategories","history","doDelete","window","confirm","DeleteCategory","doCancel","catParam","match","params","catId","isNaN","GetImages","images","canDelete","deleteTitle","withRouter","Lsitbox","Items","item","Text","EditImage","ImageId","UpdateImage","UpdateImages","DeleteImage","imageParam","join","categoriesList","cat","toString","NewImage","FormEnabled","Progress","onUploadProgress","progressEvent","percentCompleted","round","loaded","total","setStateAsync","document","getElementById","FormData","CreateImage","Promise","resolve","progressFillStyle","progressBarFillStyle","progressBarStyle","boxShadow","transition","App","sessionKey","localStorage","getItem","currentUser","userObj","JSON","parse","LoadCategories","LoadImages","searchStr","path","newCats","loginResult","setItem","stringify","removeItem","Boolean","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4cacdc36.chunk.js","sourcesContent":["import * as Models from '../models';\n\nexport default class NetworkService {\n  private axios = require('axios').default;\n  private appState?: Models.AppState;\n  private token: string | null;\n\n  constructor(private apiBase: string) {\n    this.token = null;\n  }\n\n  public SetUserAuth(token: string | null) {\n    this.token = token;\n  }\n\n  private GetHeaders(method: string = 'get') {\n    var result: any = {};\n\n    if ((method === 'post') || (method === 'put')) {\n      result['Content-Type'] = 'application/json';\n    }\n    \n    if (this.token != null) {\n      result['Authorization'] = `Bearer ${this.token}`;\n    } \n    return result;\n  }\n\n  public async Get(url: string): Promise<any> {\n    try {\n      var result = await this.axios.get(this.apiBase + url, {\n        headers: this.GetHeaders()\n      }); \n      return result.data;\n      \n    } catch {\n      return null;\n    }\n  }\n\n  public async Post(url: string, postData: any, onProgress?: (progressEvent: any) => void) {\n    try {\n      var config: any = {\n        headers: this.GetHeaders('post')\n      };\n\n      if (onProgress !== undefined) {\n        config[\"onUploadProgress\"] = onProgress;\n      }\n\n      console.log(config);\n      \n      var result = await this.axios.post(this.apiBase + url, postData, config); \n      return result.data;\n      \n    } catch {\n      return null;\n    }\n  }\n\n  public async Put(url: string, postData: any) {\n    try {\n      var result = await this.axios.put(this.apiBase + url, postData, {\n        headers: this.GetHeaders('put')\n      }); \n      return result.data;\n      \n    } catch {\n      return null;\n    }\n  }\n\n  public async Delete(url: string): Promise<any> {\n    try {\n      var result = await this.axios.delete(this.apiBase + url, {\n        headers: this.GetHeaders()\n      }); \n      return result.data;\n      \n    } catch {\n      return null;\n    }\n  }\n}","import Services from './services/services';\n\nexport interface AppState {\n  CurrentUser: User | null;\n  SessionKey: string | null;\n  Services: Services;\n\n  Categories: Category[];\n  SelectCategoryId: number;\n\n  Images: Image[];\n  SelectedImageId: number;\n  \n}\n\nexport interface NetworkStatus {\n  Status: string;\n}\n\nexport interface NetworkArrayResult<T> {\n  Result: T[];\n}\n\nexport interface LoginResult {\n  SessionId: string;\n  User: User;\n}\n\nexport interface User {\n  Id: number;\n  Name: string;\n  Username: string;\n  CreateStamp: Date;  //\"2019-03-16T23:46:40.000Z\"\n  UpdateStamp: Date;\n  Enabled: boolean;\n}\n\nexport interface UserSummary {\n  Id: number;\n  Name: string;\n}\n\nexport interface Category {\n  Id: number;\n  Name: string;\n  CreateStamp: Date; //\"2019-03-16T23:46:40.000Z\"\n  UpdateStamp: Date;\n  CreatedBy: UserSummary;\n}\n\nexport interface CategorySummary {\n  Id: number;\n  Name: string;\n}\n\nexport interface Image {\n  Id: number;\n  Name: string;\n  Width: number;\n  Height: number;\n  Tags: string[];\n  Size: string;\n  Extension: string;\n  CreateStamp: Date;\n  UpdateStamp: Date;\n  CreatedBy: UserSummary;\n  Category: CategorySummary;\n  Uri: string;\n  ThumbUri: string;\n}\n\nexport class Factory {\n  static UserFromAPI(obj: any): User {\n    var result: User = {\n      Id: obj.id,\n      Name: obj.displayName,\n      Username: obj.username,\n      CreateStamp: new Date(obj.createStamp),\n      UpdateStamp: new Date(obj.updateStamp),\n      Enabled: (obj.enabled === 1)\n    };\n    return result;\n  }\n\n  static UserSummaryFromApi(obj: any): UserSummary {\n    return {\n      Id: obj.id,\n      Name: obj.name\n    };\n  }\n\n  static CategoryFromApi(obj: any): Category {\n    var user: UserSummary = Factory.UserSummaryFromApi(obj.createdBy);\n\n    var result: Category = {\n      Id: obj.id,\n      Name: obj.name,\n      CreateStamp: new Date(obj.createStamp),\n      UpdateStamp: new Date(obj.updateStamp),\n      CreatedBy: user\n    };\n    return result;\n  }\n\n  static CategorySummaryFromApi(obj: any): CategorySummary {\n    return {\n      Id: obj.id,\n      Name: obj.name\n    };\n  }\n\n  static ImageFromApi(obj: any) {\n    var user: UserSummary = Factory.UserSummaryFromApi(obj.createdBy);\n    var category: CategorySummary = Factory.CategorySummaryFromApi(obj.category);\n\n    var result: Image = {\n      Id: obj.id,\n      Name: obj.name,\n      Width: obj.width,\n      Height: obj.height,\n      Tags: obj.tags,\n      Size: obj.size,\n      Extension: obj.exension,\n      CreateStamp: new Date(obj.createStamp),\n      UpdateStamp: new Date(obj.updateStamp),\n      CreatedBy: user,\n      Category: category,\n      Uri: obj.uri,\n      ThumbUri: obj.thumburi\n    }\n    return result;\n  }\n}","import * as Models from '../models';\nimport NetworkService from './networkService';\n\nexport default class CategoriesService {\n  constructor(private network: NetworkService) { }\n  \n  async Get(): Promise<Models.Category[]> {\n    var results: Models.Category[] = [];\n    var netRes = await this.network.Get('/categories');\n    \n    netRes.result.forEach((r: any) => {\n      results.push(Models.Factory.CategoryFromApi(r));\n    });\n\n    return results;\n  }\n\n  async GetImages(id: number): Promise<Models.Image[]> {\n    var results: Models.Image[] = [];\n    var netRes = await this.network.Get(`/categories/${id}/images`);\n\n    netRes.result.forEach((r: any) => {\n      results.push(Models.Factory.ImageFromApi(r));\n    });\n\n    return results;\n  }\n\n  async CreateCategory(name: string, createdBy: number): Promise<boolean> {\n    var netRes = await this.network.Post('/categories', {\n      \"name\": name,\n      \"createdBy\": createdBy\n    });\n    return (netRes !== null);\n  }\n\n  async UpdateCategory(categoryId: number, name: string): Promise<boolean> {\n    var netRes = await this.network.Put('/categories/' + categoryId, {\n      name: name,\n    });\n    return (netRes !== null);\n  }\n\n  async DeleteCategory(categoryId: number): Promise<boolean> {\n    var result = await this.network.Delete(\"/categories/\" + categoryId);\n    return (result.status === \"OK\");\n  }\n}","import * as Models from '../models';\nimport NetworkService from './networkService';\n\nexport default class UsersService {\n  constructor(private network: NetworkService) { }\n  \n  async Login(username: string, password: string): Promise<Models.LoginResult | null> {\n    var body = {\n        \"username\": username,\n        \"password\": password\n    };\n\n    var netRes = await this.network.Post('/users/login', body);\n\n    if (netRes === null) {\n      return null;\n    }\n\n    var user = Models.Factory.UserFromAPI(netRes.user);\n    var result: Models.LoginResult = {\n      SessionId: netRes.sessionId,\n      User: user\n    };\n    \n    return result;\n  }\n}","import * as Models from '../models';\nimport NetworkService from './networkService';\n\nexport default class ImagesService {\n  constructor(private network: NetworkService) { }\n  \n  async Get(id: number): Promise<Models.Image | null> {\n    var result: Models.Image | null = null;\n    var netRes = await this.network.Get('/images/' + id);\n    \n    if (netRes !== null) {\n      result = Models.Factory.ImageFromApi(netRes);\n    }\n    return result;\n  }\n\n  async CreateImage(newImageForm: FormData, onProgress: (progressEvent: any) => void) {\n    var image = await this.network.Post(\"/images\", newImageForm, onProgress);\n    console.log(\"Image Result:\", image);\n    return (image !== null);\n  }\n\n  async UpdateImage(imageId: number, name: string, tags: string, categoryId: number): Promise<boolean> {\n    var body = {\n        name: name,\n        tags: tags,\n        categoryid: categoryId\n    }\n    var image = await this.network.Put(\"/images/\" + imageId, body);\n    return (image !== null);\n}\n\n  async DeleteImage(imageId: number): Promise<boolean> {\n    var result = await this.network.Delete(\"/images/\" + imageId);\n    return (result.status === \"OK\");\n  }\n}","import NetworkService from './networkService';\nimport CategoriesService from './categoriesService';\nimport UsersService from './userService';\nimport ImagesService from './imageService';\n\n\n\nexport default class Services {\n  private networkService: NetworkService;\n\n  public Categories: CategoriesService;\n  public Users: UsersService;\n  public Images: ImagesService;\n\n  constructor(newApiRoot: string) {\n    this.networkService = new NetworkService(newApiRoot);\n\n    this.Categories = new CategoriesService(this.networkService);\n    this.Users = new UsersService(this.networkService);\n    this.Images = new ImagesService(this.networkService);\n  }\n\n  public SetUserAuth(token: string | null) {\n    this.networkService.SetUserAuth(token);\n  }\n}","export default __webpack_public_path__ + \"static/media/unicorn.71ba1aad.png\";","import React, { Component } from 'react'\nimport logo from '../images/unicorn.png'; \nimport * as Models from '../models';\nimport { Link } from 'react-router-dom';\n\ninterface HeaderProps {\n  User: Models.User | null;\n  OnSearch: (searchString: string) => void;\n}\n\ninterface HeaderState {\n  SearchString: string;\n}\n\nexport default class header extends Component<HeaderProps, HeaderState> {\n  state: HeaderState = {\n    SearchString: \"\"\n  };\n\n  render() {\n    let displayName = \"Guest\";\n    if ((this.props.User != null) && (this.props.User.Name != null)) {\n      displayName = this.props.User.Name;\n    }\n\n    return (\n      <div style={ headerStyle }>\n        <div style={ userDetailsStyle }>\n            <input \n              type=\"text\" \n              placeholder=\"SEARCH\" \n              value={ this.state.SearchString } \n              onChange={ (event) => {\n                this.setState({ SearchString:event.target.value })\n              } }\n            /> \n            <button \n              type=\"button\" \n              onClick={ () => { \n                this.props.OnSearch(this.state.SearchString);\n              }}\n              disabled={ this.state.SearchString === \"\" }\n            >Search</button>\n            <Link \n              to=\"/\"\n              style={ currentUserStyle }\n            >Home</Link> | \n            <Link \n              to=\"/user\"\n              style={ currentUserStyle }\n            >Current User: { displayName }</Link>\n        </div>\n        <img style={ logoStyle } src={logo} alt=\"Logo\" />\n        Unicorn Photos - <span style={ awsLettersStyle }>AWS</span> TechShift\n      </div>\n    )\n  }\n}\n\nconst headerStyle: React.CSSProperties = {\n  display: 'block',\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0,\n  width: 'auto',\n  height: '66px',\n  lineHeight: '66px',\n  fontSize: 28,\n  color: '#FFFFFF',\n  background: '#36454F',\n  paddingLeft: '190px',\n  paddingRight: '10px',\n  fontVariant: 'small-caps'\n}\n\nconst logoStyle: React.CSSProperties = {\n  position: 'absolute',\n  top: 5,\n  left: 39,\n  width: 144,\n  height: 144,\n  zIndex: 99\n}\n\nconst userDetailsStyle: React.CSSProperties = {\n  float: 'right',\n  fontSize: 12\n}\n\nconst currentUserStyle: React.CSSProperties = {\n  marginLeft: 20,\n  marginRight: 20,\n  cursor: 'pointer',\n  color: '#FFFFFF',\n  fontVariant: 'normal',\n  fontWeight: 'bold',\n  textDecoration: 'none'\n}\n\nconst awsLettersStyle: React.CSSProperties = {\n  color: '#FF9C24'\n}","import React, { Component } from 'react'\n\nexport default class ellipsis extends Component {\n  render() {\n    return (\n      <div style={{ textAlign: 'center' }}><div className='lds-ellipsis'><div></div><div></div><div></div><div></div></div></div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as Models from '../models';\nimport Ellipsis from './ellipsis';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFolderPlus, faEdit } from '@fortawesome/free-solid-svg-icons'\n\ninterface CategoriesProps {\n  Categories: Models.Category[];\n  SelectCategoryId: number;\n  EditEnabled: boolean;\n  OnSelectCategory: (categoryId: number) => void;\n}\n\nexport default class categories extends Component<CategoriesProps, {}> {\n  render() {\n    return (\n      <div style={ panelStyle }>\n        <div style={ headerStyle }>Categories</div>\n        {\n          (this.props.Categories.length === 0) && <Ellipsis/>\n        }\n        \n        \n        { this.props.Categories.map((category: Models.Category) => { \n          var catStyle = categoryStyle;\n          if (category.Id === this.props.SelectCategoryId) {\n            catStyle = {...categoryStyle, ...categoryStyleSelected};\n          }\n\n          var editor = null;\n          if (this.props.EditEnabled) {\n            editor = (\n              <div style={{ float: 'right', paddingRight: '20px' }}>\n                <Link to={ '/category/' + category.Id } style={{ color: '#00000033' }}><FontAwesomeIcon icon={faEdit} /></Link>\n              </div>\n            )\n          }\n\n          return (\n            <div style={ catStyle } key={ category.Id }>\n              <span onClick={ () => {\n                this.props.OnSelectCategory(category.Id);\n              }}>{ category.Name }</span>{ editor }\n            </div>\n          );\n        })}\n\n        { this.props.EditEnabled &&\n          <div style={{ textAlign: 'center', color: '#0594E1' }}>\n            <Link to=\"/category/new\" style={{ color: '#00000033' }}><FontAwesomeIcon icon={faFolderPlus} size='2x' /></Link>\n          </div>\n        }\n    </div>\n    )\n  }\n}\n\nconst panelStyle: React.CSSProperties = {\n  display: 'block',\n  position: 'absolute',\n  top: '66px',\n  left: 0,\n  bottom: '180px',\n  width: 200,\n  height: 'auto',\n  background: '#FFFFFF',\n  borderRight: '1px solid #222D3F',\n}\n\nconst headerStyle: React.CSSProperties = {\n  paddingTop: '90px',\n  paddingLeft: '10px',\n  fontSize: '18px',\n  fontWeight: 'bold',\n  color: '#000000',\n  lineHeight: '48px',\n  borderBottom: '1px solid #000000',\n  marginBottom: '12px'\n}\n\nconst categoryStyle: React.CSSProperties = {\n  marginTop: '5px',\n  marginBottom: '5px',\n  lineHeight: '22px',\n  cursor: 'pointer',\n  color: '#000000',\n  marginLeft: '15px',\n  fontSize: '16px'\n}\n\nconst categoryStyleSelected: React.CSSProperties = {\n  fontWeight: 'bold',\n  color: '#FF9C24'\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\n\nimport * as Models from '../models';\n\ninterface FilmStripProps {\n  Images: Models.Image[];\n  SelectedImageId: number;\n  OnSelectImage: (imageId: number) => void;\n  EditEnabled: boolean;\n}\n\nexport default class filmstrip extends Component<FilmStripProps, {}> {\n  render() {\n    return (\n      <div style={ footerPanelStyle }>\n        {\n          this.props.Images.map((image: Models.Image) => {\n            var imgStyle = imageStyle;\n            if (image.Id === this.props.SelectedImageId) {\n              imgStyle = {...imageStyle, ...imageSelectedStyle};\n            }\n\n            return (\n              <div style={ imageFrameStyle } key={ image.Id }>\n                <div style={ imageContentFrameStyle } onClick={ () => {\n                  this.props.OnSelectImage(image.Id);\n                }}>\n                  <img style={ imgStyle } src={ image.ThumbUri } alt={ image.Name } /><br />\n                  { image.Name }\n                </div>\n              </div>\n            )\n          })\n        }\n        \n        { this.props.EditEnabled && \n          <div style={ addImageStyle }>\n            <Link to={ '/newimage' } style={{ color: '#00000033' }}><FontAwesomeIcon icon={faPlusCircle} size='4x' /></Link>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nconst footerPanelStyle: React.CSSProperties = {\n  display: 'inline-block',\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  right: 0,\n  width: '100%',\n  height: '180px',\n  background: '#FFFFFF',\n  borderTop: '1px solid #222D3F',\n  color: '#000000',\n  verticalAlign: 'middle',\n  lineHeight: '180px',\n  overflowX: 'scroll'\n}\n\nconst imageFrameStyle: React.CSSProperties = {\n  display: 'inline-block',\n  padding: '10px',\n  lineHeight: 'normal'\n}\n\nconst addImageStyle: React.CSSProperties = {\n  display: 'inline-block',\n  color: '#00000033',\n  position: 'relative',\n  top: '-60px',\n  left: '15px'\n}\n\nconst imageContentFrameStyle: React.CSSProperties = {\n  textAlign: 'center',\n  padding: '8px',\n  color: '#000000',\n  cursor: 'pointer'\n}\n\nconst imageStyle: React.CSSProperties = {\n  border: '2px solid #00000000',  /* Needed to make sure images don't bounce around */\n  width: '180px',\n  height: '120px',\n  objectFit: 'contain',\n  padding: '3px'\n}\n\nconst imageSelectedStyle: React.CSSProperties = {\n  border: '2px solid #0594E1',\n  backgroundColor: '#F1FAFF'\n}","import React, { Component } from 'react'\n\nimport * as Models from '../models';\n\ninterface LightboxProps {\n  Images: Models.Image[] | undefined;\n  SelectedImageId: number;\n}\n\nexport default class lightbox extends Component<LightboxProps, {}> {\n  render() {\n    if (this.props.Images === undefined) {\n      return null;\n    }\n\n    /*\n        var image = this.props.Images.find((r: Models.Image) => {\n      return r.Id === this.props.SelectedImageId;\n    });  \n    */\n  \n    return (\n      <div style={ lightboxStyle }>\n        { this.props.Images.map((image: Models.Image) => {\n  \n          var itemStyle = {...lightboxImageStyle};\n          if (image.Id !== this.props.SelectedImageId) {\n            itemStyle.display = 'none';\n          } else {\n            itemStyle.display = 'block';\n          }\n          return (\n            <img src={ image.Uri } key={ image.Uri } alt={ image.Name } style={ itemStyle }/>\n          )})\n        }\n      </div>\n    ) \n  }\n}\n\nconst lightboxStyle: React.CSSProperties = {\n  display: 'block',\n  position: 'absolute',\n  height: 'auto',\n  width: 'auto',\n  top: '66px',\n  bottom: '180px',\n  left: '200px',\n  right: '240px',\n  textAlign: 'center'\n}\n\nconst lightboxImageStyle: React.CSSProperties = {\n  objectFit: 'contain',\n  boxSizing: 'border-box',\n  width: '100%',\n  height: '100%'\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\n\nimport * as Models from '../models';\nimport moment from 'moment';\n\ninterface MetaProps {\n  Image: Models.Image | undefined;\n  EditEnabled: boolean;\n}\n\nexport default class meta extends Component<MetaProps, {}> {\n  \n  FormatDate(stamp: Date, format: string) {\n    return moment(stamp).format(format); //\"MMMM Do YYYY\")\n  }\n\n  ReadableFileSizeString(fileSizeInBytes: number) {\n    var i = -1;\n    var byteUnits = [' kB', ' MB', ' GB', ' TB', ' PB', ' EB', ' ZB', ' YB'];\n    do {\n        fileSizeInBytes = fileSizeInBytes / 1024;\n        i++;\n    } while (fileSizeInBytes > 1024);\n\n    return Math.max(fileSizeInBytes, 0.1).toFixed(1) + byteUnits[i];\n  }\n  \n  render() {\n    var image = this.props.Image;\n    if (image === undefined) {\n      return null;\n    }\n\n    return (\n      <div style={ panelStyle }>\n        <div style={ headerStyle }>\n          Image Metadata\n          { this.props.EditEnabled && \n            <div style={{ float: 'right', paddingRight: '20px' }}>\n              <Link to={ '/image/' + image.Id } style={{ color: '#00000033' }}><FontAwesomeIcon icon={faEdit} /></Link>\n            </div>\n          }\n        </div>\n        <dl style={ dlStyle }>\n            <dt style={ dtStyle }>Name:</dt>\n            <dd style={ ddStyle }>{ image.Name }</dd>\n            \n            <dt style={ dtStyle }>Size:</dt>\n            <dd style={ ddStyle }>{ image.Width }x{ image.Height }</dd>\n\n            <dt style={ dtStyle }>File Size:</dt>\n            <dd style={ ddStyle }>{ this.ReadableFileSizeString(parseInt(image.Size)) }</dd>\n\n            <dt style={ dtStyle }>Uploaded:</dt>\n            <dd style={ ddStyle }>{ this.FormatDate(image.CreateStamp, \"MMMM Do YYYY\") }</dd>\n\n            <dt style={ dtStyle }>Owner:</dt>\n            <dd style={ ddStyle }>{ image.CreatedBy.Name }</dd>\n\n            <dt style={ dtStyle }>Category:</dt>\n            <dd style={ ddStyle }>{ image.Category.Name }</dd>\n            \n            <dt style={ dtStyle }>Tags:</dt>\n            <dd style={ ddStyle }>\n            {\n              image.Tags.map((tag: string) => (\n                <span style={ tagStyle } key={ tag }>{ tag }</span>\n              ))\n            }\n            </dd>\n        </dl>\n      </div>\n    )\n  }\n}\n\nconst panelStyle: React.CSSProperties = {\n  display: 'block',\n  position: 'absolute',\n  top: '66px',\n  right: 0,\n  bottom: '180px',\n  width: 240,\n  height: 'auto',\n  background: '#FFFFFF',\n  borderLeft: '1px solid #222D3F',\n}\n\nconst headerStyle: React.CSSProperties = {\n  paddingTop: '10px',\n  paddingLeft: '10px',\n  fontSize: '18px',\n  fontWeight: 'bold',\n  color: '#000000',\n  lineHeight: '48px',\n  borderBottom: '1px solid #000000',\n  marginBottom: '12px'\n}\n\nconst dlStyle: React.CSSProperties = {\n  display: 'grid',\n  gridTemplate: 'auto / 6em 1fr'\n}\n\nconst dtStyle: React.CSSProperties = {\n  margin: 0,\n  padding: '.3em .5em',\n  borderTop: '1px solid rgba(0, 0, 0, .1)'\n}\n\nconst ddStyle: React.CSSProperties = {\n  margin: 0,\n  padding: '.3em .5em',\n  borderTop: '1px solid rgba(0, 0, 0, .1)'\n}\n\nconst tagStyle: React.CSSProperties = {\n  display: 'inline-block',\n  padding: '2px 5px',\n  margin: '2px',\n  border: '1px solid #0594E1',\n  backgroundColor: '#F1FAFF',\n  WebkitBorderRadius: '5px',\n  borderRadius: '4px',\n  color: '#000000'\n}","import React, { Component } from 'react'\nimport * as Models from '../models';\n\nimport Categories from '../components/categories';\nimport FileStrip from '../components/filmstrip';\nimport Lightbox from '../components/lightbox';\nimport Meta from '../components/meta';\n\ninterface HomeProps {\n\n  CurrentUser: Models.User | null;\n\n  Categories: Models.Category[];\n  SelectCategoryId: number;\n\n  Images: Models.Image[];\n  SelectedImageId: number;\n\n  OnSetImage: (imageId: number) => void;\n  OnSetCategory: (categoryId: number) => void;\n}\n\nexport default class home extends Component<HomeProps, {}> {\n  render() {\n    var image = this.props.Images.find((r: Models.Image) => {\n      return r.Id === this.props.SelectedImageId;\n    });  \n\n    var canEdit = (this.props.CurrentUser !== null);\n    \n    return (\n      <React.Fragment>\n        <Categories \n          Categories={ this.props.Categories } \n          SelectCategoryId={ this.props.SelectCategoryId } \n          EditEnabled={ canEdit }\n          OnSelectCategory={ this.props.OnSetCategory }\n        />\n\n        <Meta \n          Image={ image } \n          EditEnabled={ canEdit }\n        />\n\n        <FileStrip \n          Images={ this.props.Images }\n          SelectedImageId={ this.props.SelectedImageId }\n          OnSelectImage={ this.props.OnSetImage }\n          EditEnabled={ canEdit }\n        />\n        \n        <Lightbox\n          Images={ this.props.Images }\n          SelectedImageId={ this.props.SelectedImageId }\n        />\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\ninterface FormProps {\n  Heading: string;\n  OkTitle?: string;\n  CancelTitle?: string;\n  DeleteTitle?: string;\n  OnOK?: () => void;\n  OnCancel?: () => void;\n  OnDelete?: () => void;\n  FormId?: string;\n  Enabled?: boolean;\n}\n\nexport default class form extends Component<FormProps, {}> {\n  render() {\n\n    var buttonsDisabled = false;\n    if (this.props.Enabled !== undefined) {\n      buttonsDisabled = !this.props.Enabled;\n    }\n\n    var buttonDiv = null;\n    var deleteDiv = null;\n\n    if ((this.props.DeleteTitle !== undefined) && (this.props.OnDelete !== undefined)) {\n      deleteDiv = (\n        <div style={ deleteDivStyle }>\n          <button className=\"deleteButton\" onClick={ this.props.OnDelete } disabled={ buttonsDisabled }>{ this.props.DeleteTitle }</button>\n        </div>\n      )\n    }\n\n    if ((this.props.OkTitle !== undefined) || (this.props.CancelTitle !== undefined)) {\n      buttonDiv = (\n        <div style={ buttonDivStyle }>\n          { (this.props.CancelTitle !== undefined) && (this.props.OnCancel !== undefined) &&\n            <button className=\"button\" onClick={ this.props.OnCancel } disabled={ buttonsDisabled }>{ this.props.CancelTitle }</button>\n          }\n          { (this.props.OkTitle !== undefined) && (this.props.OnOK !== undefined) &&\n            <button className=\"primaryButton\" onClick={ this.props.OnOK } disabled={ buttonsDisabled }>{ this.props.OkTitle }</button>\n          }\n        </div>\n      )\n    }\n\n    return (\n      <div style={ formFrameStyle }>\n        <div style={ formHeadingStyle }>{ this.props.Heading }</div>\n        <div style={ formBodyStyle }>\n          <form id={ this.props.FormId } onSubmit={(e) => { e.preventDefault(); }}>\n            { this.props.children }\n            { deleteDiv }{ buttonDiv }\n            <div style={{ clear: 'both' }}></div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst formFrameStyle: React.CSSProperties = {\n  width: '800px', \n  borderTop: '1px solid #ECECEC', \n  borderRight: '1px solid #CCD0D2', \n  borderBottom: '1px solid #8C979B', \n  borderLeft: '1px solid #CCD0D2', \n  backgroundColor: '#FFFFFF', \n  marginLeft: 'auto', \n  marginRight: 'auto',\n}\n\nconst formHeadingStyle: React.CSSProperties = {\n  fontSize: '18px',\n  fontWeight: 400,\n  marginBottom: '8px',\n  backgroundColor: '#F5F5F5',\n  padding: '15px', \n}\n\nconst formBodyStyle: React.CSSProperties = {\n  padding: '10px 20px'\n}\n\nconst buttonDivStyle: React.CSSProperties = {\n  float: 'right'\n}\n\nconst deleteDivStyle: React.CSSProperties = {\n  float: 'left'\n}\n","import React, { Component } from 'react'\n\ninterface TextboxProps {\n  Title: string;\n  Value?: string;\n  OnChange?: (newValue: string) => void;\n  Type?: 'text' | 'password' | 'file';\n  OnEnter?: () => void;\n  Id?: string;\n}\n\nexport default class Textbox extends Component<TextboxProps, {}> {\n  render() {\n    var textBoxType = 'text';\n    if (this.props.Type !== undefined) {\n      textBoxType = this.props.Type;\n    }\n    \n\n\n    return (\n      <div style={ inputFrameStyle }>\n        <div style={ inputTitleStyle }>{ this.props.Title }</div>\n        <div>\n          <input\n            id={ this.props.Id } \n            name={ this.props.Id }\n            type={ textBoxType } \n            value={ this.props.Value } \n            style={ inputStyle } \n            onChange={ (event: any) => {\n              if (this.props.OnChange !== undefined) {\n                this.props.OnChange(event.target.value);\n              }\n            }}\n            onKeyDown={ (event:any) => {\n              if (this.props.OnEnter !== undefined) {\n                if (event.key === 'Enter') {\n                  this.props.OnEnter();\n                }\n              }\n            }}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nconst inputFrameStyle: React.CSSProperties = {\n  marginBottom: '10px'\n}\n\nconst inputTitleStyle: React.CSSProperties = {\n  marginBottom: '4px'\n}\n\nconst inputStyle: React.CSSProperties = {\n  width: '100%', \n  fontSize: '14px', \n  padding: '4px 10px', \n  boxSizing: 'border-box'\n}","import React, { Component } from 'react'\n\ninterface AlertProps {\n  Visable?: boolean;\n  Header: string;\n  Type?: 'error' | 'info' | 'success';\n  OnDismiss?: () => void;\n}\n\nexport default class alert extends Component<AlertProps, {}> {\n  render() {\n    if (this.props.Visable !== undefined) {\n      if (this.props.Visable === false) {\n        return null;\n      }\n    }\n\n    var style = alertStyle;\n    \n    if (this.props.Type !== undefined) {\n      if (this.props.Type === 'error') {\n        //Error\n        style = {...style, ...{\n          border: '1px solid #FD4D2C',\n          backgroundColor: '#FEF3F1',\n          color: '#692416'\n        }};\n      } else if (this.props.Type === \"success\") {\n        //Success\n        style = {...style, ...{\n          border: '1px solid #1CA62A',\n          backgroundColor: '#F2F8F0',\n          color: '#0E420F'\n        }};\n      } else {\n        // Info\n        style = {...style, ...{\n          border: '1px solid #0594E1',\n          backgroundColor: '#F1FAFF',\n          color: '#0D4562'\n        }};\n      }\n    }\n\n    return (\n      <div style={ style } onClick={ () => {\n        if (this.props.OnDismiss !== undefined) {\n          this.props.OnDismiss();\n        }        \n      }}>\n        { this.props.Header }\n      </div>\n    )\n  }\n}\n\nconst alertStyle: React.CSSProperties = {\n  width: '60%',\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  marginBottom: '10px',\n  padding: '12px 12px',\n  WebkitBorderRadius: '5px',\n  borderRadius: '5px',\n}","import React, { Component } from 'react';\nimport Form from '../components/form';\nimport Textbox from '../components/textbox';\nimport Alert from '../components/alert';\nimport * as Models from '../models';\nimport Services from '../services/services';\n\ninterface LoginboxProps {\n  CurrentUser: Models.User | null;\n  SessionKey: string | null;\n  Services: Services;\n  OnLogin: (loginResult: Models.LoginResult) => void;\n}\n\ninterface LoginboxState {\n  Username: string;\n  Password: string;\n  ErrorMessage: string;\n}\n\nexport default class Loginbox extends Component<LoginboxProps, LoginboxState> {\n  state: LoginboxState = {\n    Username: '',\n    Password: '',\n    ErrorMessage: ''\n  };\n\n  doLogin = async () => {\n    const username = this.state.Username;\n    const password = this.state.Password;\n\n    if ((username === '') || (password === '')) {\n      this.setState({ ErrorMessage: 'Username and password are required to login' });\n      return;\n    }\n    \n    var result = await this.props.Services.Users.Login(username, password);\n  \n    if (result === null) {\n      this.setState({ ErrorMessage: 'Incorrect username and password combination' });\n      return;\n    }\n\n    this.props.OnLogin(result);\n  }\n  \n  render() {\n    return (\n      <React.Fragment>\n        <Alert \n          Header={ this.state.ErrorMessage }\n          Visable={ this.state.ErrorMessage !== '' }\n          Type=\"error\"\n          OnDismiss={ () => {\n            this.setState({ ErrorMessage: '' });\n          }}\n        />\n        <Form Heading=\"User Login\" OkTitle=\"Login\" OnOK={ this.doLogin }>\n          <Textbox \n            Title=\"Username\" \n            Value={ this.state.Username } \n            OnChange={(nv: string) => { this.setState({ Username: nv }) }} \n          />\n          <Textbox \n            Title=\"Password\" \n            Value={ this.state.Password } \n            OnChange={(nv: string) => { this.setState({ Password: nv }) }} \n            Type=\"password\" \n            OnEnter={ this.doLogin }\n          />\n        </Form>\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\ninterface TextboxProps {\n  Title: string;\n  Value: string;\n}\n\nexport default class Label extends Component<TextboxProps, {}> {\n  render() {\n    return (\n      <div style={ labelFrameStyle }>\n        <div style={ labelTitleStyle }>{ this.props.Title }</div>\n        <div style={ labelValueStyle }>{ this.props.Value }</div>\n      </div>\n    )\n  }\n}\n\nconst labelFrameStyle: React.CSSProperties = {\n  marginBottom: '10px'\n}\n\nconst labelTitleStyle: React.CSSProperties = {\n  fontSize: '14px',\n  marginBottom: '4px'\n}\n\nconst labelValueStyle: React.CSSProperties = {\n  fontSize: '14px',\n  marginBottom: '4px',\n  fontWeight: 'bold'\n}","import React, { Component } from 'react';\nimport Form from '../components/form';\nimport Label from '../components/label';\nimport * as Models from '../models';\nimport moment from 'moment';\n\ninterface UserDetailsProps {\n  CurrentUser: Models.User | null;\n  OnLogout: () => void;\n}\n\nexport default class UserDetails extends Component<UserDetailsProps, {}> {\n  FormatDate(stamp: Date, format: string) {\n    return moment(stamp).format(format); //\"MMMM Do YYYY\")\n  }\n  \n  render() {\n    if (this.props.CurrentUser === null) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <Form Heading=\"User Details\" OkTitle=\"Logout\" OnOK={ this.props.OnLogout }>\n          <Label Title=\"Username\" Value={ this.props.CurrentUser.Username } />\n          <Label Title=\"Name\" Value={ this.props.CurrentUser.Name } />\n          <Label Title=\"Created\" Value={ this.FormatDate(this.props.CurrentUser.CreateStamp, \"MMMM Do YYYY\") } />\n          <Label Title=\"Updated\" Value={ this.FormatDate(this.props.CurrentUser.UpdateStamp, \"MMMM Do YYYY\") } />\n        </Form>\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport * as Models from '../models';\nimport Services from '../services/services';\nimport Loginbox from '../components/loginbox';\nimport UserDetails from '../components/userdetails';\n\ninterface UserProps {\n  CurrentUser: Models.User | null;\n  SessionKey: string | null;\n  Services: Services;\n  OnLogin: (loginResult: Models.LoginResult) => void;\n  OnLogout: () => void;\n}\n\nexport default class user extends Component<UserProps, {}> {\n  render() {\n    const isLoggedIn = this.props.CurrentUser !== null;\n\n    return (\n      <React.Fragment>\n        { !isLoggedIn && \n          <Loginbox \n            Services={ this.props.Services } \n            CurrentUser={ this.props.CurrentUser } \n            SessionKey={ this.props.SessionKey } \n            OnLogin={ this.props.OnLogin }\n          />\n        }\n\n        { isLoggedIn && \n          <UserDetails \n            CurrentUser={ this.props.CurrentUser }\n            OnLogout={ this.props.OnLogout }\n          />\n        }\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\n\nimport Form from '../components/form';\nimport Textbox from '../components/textbox';\nimport Alert from '../components/alert';\n\nimport Services from '../services/services';\nimport * as Models from '../models';\n\ninterface EditCategoryProps {\n  match: any;\n  location: any;\n  history: any;\n  Categories: Models.Category[];\n  Services: Services;\n  User: Models.User | null;\n  UpdateCategories: (newCats: Models.Category[]) => Promise<void>;\n}\n\ninterface EditCategoryState {\n  CategoryId: number;\n  Name: string;\n  ErrorMessage: string;\n  PageTitle: string;\n  CanDelete: boolean;\n}\n\nclass EditCategory extends Component<EditCategoryProps, EditCategoryState> {\n  state: EditCategoryState = {\n    CategoryId: -1,\n    Name: '',\n    ErrorMessage: '',\n    PageTitle: '',\n    CanDelete: false\n  }\n  \n  async componentDidMount() {\n    if (this.props.Categories.length === 0) {\n      this.props.history.push(\"/\");\n      return;\n    }\n    \n    const catParam = this.props.match.params.id;\n\n    if (catParam === 'new') {\n      this.setState({\n        CategoryId: -1,\n        Name: '',\n        ErrorMessage: '',\n        PageTitle: 'New Category'\n      });\n    } else {\n      var catId = parseInt(catParam);\n      if (isNaN(catId)) {\n        this.setState({\n          CategoryId: -1,\n          Name: '',\n          ErrorMessage: 'Invalid page parameter.',\n          PageTitle: ''\n        });\n      } else {\n        var category = this.props.Categories.find((r: Models.Category) => {\n          return (r.Id === catId);\n        });\n\n        if (category === undefined) {\n          this.setState({\n            CategoryId: -1,\n            Name: '',\n            ErrorMessage: 'Invalid category Id',\n            PageTitle: ''\n          });\n        } else {\n          //Check if there are any images\n          var images = await this.props.Services.Categories.GetImages(catId);\n          var canDelete = (images.length === 0);\n\n          this.setState({\n            CategoryId: catId,\n            Name: category.Name,\n            ErrorMessage: '',\n            PageTitle: 'Edit Category',\n            CanDelete: canDelete\n          });\n        }\n      }\n    }\n  }\n\n  doCommit = async () => {\n    if (this.state.Name === '') {\n      this.setState({ ErrorMessage: 'You must supply a name for the category.' });\n      return;\n    }\n\n    if (this.props.User === null) {\n      this.setState({ ErrorMessage: 'User property must be set.' });\n      return;\n    }\n\n    var success = false;\n    if (this.state.CategoryId === -1) {\n      //Create a new category\n      success = await this.props.Services.Categories.CreateCategory(this.state.Name, this.props.User.Id);\n    } else {\n      //Save the categroy\n      success = await this.props.Services.Categories.UpdateCategory(this.state.CategoryId, this.state.Name);\n    }\n\n    if (success) {\n      var categories = await this.props.Services.Categories.Get();\n      await this.props.UpdateCategories(categories);\n      this.props.history.push(\"/\");\n    } else {\n      this.setState({ ErrorMessage: 'Create / Update failed. Please check API running.' });\n    }\n  }\n\n  doDelete = async () => {\n    if (window.confirm('Are you sure you want to delete this category?')) {\n      var success = await this.props.Services.Categories.DeleteCategory(this.state.CategoryId);\n\n      if (success) {\n        var categories = await this.props.Services.Categories.Get();\n        await this.props.UpdateCategories(categories);\n        this.props.history.push(\"/\");\n      } else {\n        this.setState({ ErrorMessage: 'Create / Update failed. Please check API running.' });\n      }\n    }\n  }\n\n  doCancel = () => {\n    this.props.history.push(\"/\");\n  }\n\n  render() {\n    var deleteTitle = undefined;\n\n    if (this.state.CanDelete) {\n      deleteTitle = \"Delete\";\n    }\n\n    return (\n      <React.Fragment>\n        <Alert \n          Header={ this.state.ErrorMessage }\n          Visable={ this.state.ErrorMessage !== '' }\n          Type=\"error\"\n          OnDismiss={ () => {\n            this.setState({ ErrorMessage: '' });\n          }}\n        />\n        { (this.state.PageTitle !== '') &&\n          <Form \n            Heading={ this.state.PageTitle } \n            OkTitle=\"Save\" \n            OnOK={ this.doCommit }\n            CancelTitle=\"Cancel\"\n            OnCancel={ this.doCancel }\n            DeleteTitle={ deleteTitle } \n            OnDelete={ this.doDelete }\n          >\n            <Textbox \n              Title=\"Category Name\" \n              Value={ this.state.Name }\n              OnChange={(nv: string) => { \n                this.setState({ Name: nv }) \n              }} \n            />\n          </Form>\n        }\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withRouter(EditCategory);","import React, { Component } from 'react'\n\ninterface ListboxOption {\n  Value: string;\n  Text: string;\n}\n\ninterface ListboxProps {\n  Id?: string;\n  Title: string;\n  Value: string;\n  Items: ListboxOption[];\n  OnChange: (newValue: string) => void;\n}\n\nexport default class Lsitbox extends Component<ListboxProps, {}> {\n  render() {\n\n    return (\n      <div style={ inputFrameStyle }>\n        <div style={ inputTitleStyle }>{ this.props.Title }</div>\n        <div>\n          <select\n            id={ this.props.Id } \n            name={ this.props.Id }\n            style={ inputStyle }\n            value={ this.props.Value }\n            onChange={ (event: any) => {\n              this.props.OnChange(event.target.value);\n            }}\n          >\n            { this.props.Items.map((item: ListboxOption) => {\n              return (\n                <option value={ item.Value } key={ item.Value }>{ item.Text}</option>\n              );\n            })}\n          </select>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst inputFrameStyle: React.CSSProperties = {\n  marginBottom: '10px'\n}\n\nconst inputTitleStyle: React.CSSProperties = {\n  marginBottom: '4px'\n}\n\nconst inputStyle: React.CSSProperties = {\n  width: '100%', \n  fontSize: '14px', \n  padding: '4px 10px', \n  boxSizing: 'border-box'\n}","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\n\nimport Form from '../components/form';\nimport Textbox from '../components/textbox';\nimport Listbox from '../components/listbox';\nimport Alert from '../components/alert';\n\nimport Services from '../services/services';\nimport * as Models from '../models';\n\ninterface EditImageProps {\n  match: any;\n  location: any;\n  history: any;\n  \n  Categories: Models.Category[];\n  Services: Services;\n  User: Models.User | null;\n\n  UpdateImages: () => Promise<void>;\n}\n\ninterface EditImageState {\n  ImageId: number;\n  Name: string;\n  Tags: string;\n  CategoryId: number;\n  ErrorMessage: string;\n}\n\nclass EditImage extends Component<EditImageProps, EditImageState> {\n  state: EditImageState = {\n    ImageId: -1,\n    Name: '',\n    Tags: '',\n    CategoryId: -1,\n    ErrorMessage: ''\n  }\n  \n  async componentDidMount() {\n    if (this.props.Categories.length === 0) {\n      this.props.history.push(\"/\");\n      return;\n    }\n    \n    const imageParam = this.props.match.params.id;\n\n    var imageId = parseInt(imageParam);\n    if (isNaN(imageId)) {\n      this.setState({\n        ImageId: -1,\n        Name: '',\n        Tags: '',\n        CategoryId: -1,\n        ErrorMessage: 'Invalid page parameter.'\n      });\n    } else {\n      \n      //Load the image data\n      var image = await this.props.Services.Images.Get(imageId);\n\n      if (image === null) {\n        this.setState({\n          ImageId: -1,\n          Name: '',\n          Tags: '',\n          CategoryId: -1,\n          ErrorMessage: 'Invalid image Id',\n        });\n      } else {\n        this.setState({\n          ImageId: imageId,\n          Name: image.Name,\n          Tags: image.Tags.join(','),\n          CategoryId: image.Category.Id,\n          ErrorMessage: '',\n        });\n      }\n    }\n  }\n\n  doCommit = async () => {\n    if (this.state.Name === '') {\n      this.setState({ ErrorMessage: 'You must supply a name for the image.' });\n      return;\n    }\n\n    if (this.props.User === null) {\n      this.setState({ ErrorMessage: 'User property must be set.' });\n      return;\n    }\n\n    var success = await this.props.Services.Images.UpdateImage(\n      this.state.ImageId, \n      this.state.Name,\n      this.state.Tags,\n      this.state.CategoryId\n    );\n\n    if (success) {\n      await this.props.UpdateImages();\n      this.props.history.push(\"/\");\n    } else {\n      this.setState({ ErrorMessage: 'Create / Update failed. Please check API running.' });\n    }\n  }\n\n  doDelete = async () => {\n    if (window.confirm('Are you sure you want to delete this image?')) {\n      var success = await this.props.Services.Images.DeleteImage(this.state.ImageId);\n\n      if (success) {\n        await this.props.UpdateImages();\n        this.props.history.push(\"/\");\n      } else {\n        this.setState({ ErrorMessage: 'Create / Update failed. Please check API running.' });\n      }\n    }\n  }\n\n  doCancel = () => {\n    this.props.history.push(\"/\");\n  }\n\n  render() {\n\n    var categoriesList = this.props.Categories.map((cat: Models.Category) => {\n      return {\n        Value: cat.Id.toString(),\n        Text: cat.Name\n      }\n    });\n\n    return (\n      <React.Fragment>\n        <Alert \n          Header={ this.state.ErrorMessage }\n          Visable={ this.state.ErrorMessage !== '' }\n          Type=\"error\"\n          OnDismiss={ () => {\n            this.setState({ ErrorMessage: '' });\n          }}\n        />\n        { (this.state.ImageId !== -1) &&\n          <Form \n            Heading=\"Edit Image\"\n            OkTitle=\"Save\" \n            OnOK={ this.doCommit }\n            CancelTitle=\"Cancel\"\n            OnCancel={ this.doCancel }\n            DeleteTitle=\"Delete\"\n            OnDelete={ this.doDelete }\n          >\n            <Textbox \n              Title=\"Name\" \n              Value={ this.state.Name }\n              OnChange={(nv: string) => { \n                this.setState({ Name: nv }) \n              }} \n            />\n            <Textbox \n              Title=\"Tags\" \n              Value={ this.state.Tags }\n              OnChange={(nv: string) => { \n                this.setState({ Tags: nv }) \n              }} \n            />\n            <Listbox \n              Title=\"Name\" \n              Value={ this.state.CategoryId.toString() }\n              Items={ categoriesList }\n              OnChange={(nv: string) => { \n                var catId = parseInt(nv);\n                if (!isNaN(catId)) {\n                  this.setState({ CategoryId: parseInt(nv) }) \n                }\n              }} \n            />\n          </Form>\n        }\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withRouter(EditImage);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\n\nimport Form from '../components/form';\nimport Textbox from '../components/textbox';\nimport Listbox from '../components/listbox';\nimport Alert from '../components/alert';\n\nimport Services from '../services/services';\nimport * as Models from '../models';\n\ninterface NewImageProps {\n  match: any;\n  location: any;\n  history: any;\n  \n  Categories: Models.Category[];\n  Services: Services;\n  User: Models.User | null;\n  SelectCategoryId: number;\n\n  UpdateImages: () => Promise<void>;\n}\n\ninterface NewImageState {\n  ImageId: number;\n  Name: string;\n  Tags: string;\n  CategoryId: number;\n  ErrorMessage: string;\n  FormEnabled: boolean;\n  Progress: number;\n}\n\nclass NewImage extends Component<NewImageProps, NewImageState> {\n  state: NewImageState = {\n    ImageId: -1,\n    Name: '',\n    Tags: '',\n    CategoryId: -1,\n    ErrorMessage: '',\n    FormEnabled: true,\n    Progress: 0\n  }\n\n  setStateAsync(state: any) {\n    return new Promise((resolve) => {\n      this.setState(state, resolve)\n    });\n  }\n  \n  async componentDidMount() {\n    if (this.props.Categories.length === 0) {\n      this.props.history.push(\"/\");\n      return;\n    }\n    \n    this.setState({\n      ImageId: -1,\n      Name: '',\n      Tags: '',\n      CategoryId: this.props.SelectCategoryId,\n      ErrorMessage: '',\n    });\n  }\n\n  onUploadProgress = (progressEvent: any) => {\n    var percentCompleted = Math.round( (progressEvent.loaded * 100) / progressEvent.total );\n    this.setStateAsync({ Progress: percentCompleted});\n  }\n\n  doCommit = async () => {\n    if (this.state.Name === '') {\n      this.setState({ ErrorMessage: 'You must supply a name for the image.' });\n      return;\n    }\n\n    if (this.props.User === null) {\n      this.setState({ ErrorMessage: 'User property must be set.' });\n      return;\n    }\n\n    var form = document.getElementById(\"newImageForm\") as HTMLFormElement;\n    var data = new FormData(form);\n\n    await this.setStateAsync({ FormEnabled: false });\n\n    var success = await this.props.Services.Images.CreateImage(data, this.onUploadProgress);\n    \n    if (success) {\n      await this.props.UpdateImages();\n      this.props.history.push(\"/\");\n      return;\n    } else {\n      this.setState({ ErrorMessage: 'Create failed. Please check API running.' });\n    }\n    await this.setStateAsync({ FormEnabled: true });\n  }\n\n  doDelete = async () => {\n    if (window.confirm('Are you sure you want to delete this image?')) {\n      var success = await this.props.Services.Images.DeleteImage(this.state.ImageId);\n\n      if (success) {\n        await this.props.UpdateImages();\n        this.props.history.push(\"/\");\n      } else {\n        this.setState({ ErrorMessage: 'Create / Update failed. Please check API running.' });\n      }\n    }\n  }\n\n  doCancel = () => {\n    this.props.history.push(\"/\");\n  }\n\n  render() {\n    var categoriesList = this.props.Categories.map((cat: Models.Category) => {\n      return {\n        Value: cat.Id.toString(),\n        Text: cat.Name\n      }\n    });\n\n    var progressFillStyle = {...progressBarFillStyle, ...{width: this.state.Progress + '%' }}\n\n    return (\n      <React.Fragment>\n        <Alert \n          Header={ this.state.ErrorMessage }\n          Visable={ this.state.ErrorMessage !== '' }\n          Type=\"error\"\n          OnDismiss={ () => {\n            this.setState({ ErrorMessage: '' });\n          }}\n        />\n        <Form \n          Heading=\"Edit Image\"\n          OkTitle=\"Save\" \n          OnOK={ this.doCommit }\n          CancelTitle=\"Cancel\"\n          OnCancel={ this.doCancel }\n          DeleteTitle=\"Delete\"\n          OnDelete={ this.doDelete }\n          FormId=\"newImageForm\"\n          Enabled={ this.state.FormEnabled }\n        >\n          <Textbox \n            Id=\"name\"\n            Title=\"Name\" \n            Value={ this.state.Name }\n            OnChange={(nv: string) => { \n              this.setState({ Name: nv }) \n            }} \n          />\n          <Textbox \n            Id=\"tags\"\n            Title=\"Tags\" \n            Value={ this.state.Tags }\n            OnChange={(nv: string) => { \n              this.setState({ Tags: nv }) \n            }} \n          />\n          <Listbox \n            Id=\"categoryid\"\n            Title=\"Name\" \n            Value={ this.state.CategoryId.toString() }\n            Items={ categoriesList }\n            OnChange={(nv: string) => { \n              var catId = parseInt(nv);\n              if (!isNaN(catId)) {\n                this.setState({ CategoryId: parseInt(nv) }) \n              }\n            }} \n          />\n          <Textbox \n            Id=\"imgsrc\"\n            Title=\"File\" \n            Type=\"file\"\n          />\n\n          { (this.state.Progress > 0) &&\n          <div style={ progressBarStyle }>\n\t\t\t\t    <span style={ progressFillStyle }></span>\n\t\t\t    </div>\n          }\n        </Form>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withRouter(NewImage);\n\nconst progressBarStyle: React.CSSProperties = {\n  width: '100%',\n  height: '8px',\n  backgroundColor: '#e0e0e0',\n  margin: '10px 0px',\n  borderRadius: '4px',\n  boxShadow: 'inset 0 1px 3px rgba(0, 0, 0, .2)'\n}\n\nconst progressBarFillStyle: React.CSSProperties = {\n  display: 'block',\n  height: '8px',\n  backgroundColor: '#0594E1',\n  borderRadius: '4px',\n  transition: 'width 250ms ease-in-out'\n}","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport './App.css';\nimport * as Models from './models';\n\nimport Services from './services/services';\nimport Header from './components/header';\nimport Home from './pages/home';\nimport User from './pages/user';\nimport EditCategory from './pages/editcategory';\nimport EditImage from './pages/editimage';\nimport NewImage from './pages/newimage';\n\nexport default class App extends Component<{}, Models.AppState> {\n  state: Models.AppState = {\n    CurrentUser: null,\n    SessionKey: null,\n    Services: new Services('/api'),\n    Categories: [],\n    SelectCategoryId: -1,\n    Images: [],\n    SelectedImageId: -1\n  };\n\n  setStateAsync(state: any) {\n    return new Promise((resolve) => {\n      this.setState(state, resolve)\n    });\n  }\n\n  async componentDidMount() {\n    const sessionKey = localStorage.getItem('SessionKey');\n    const currentUser = localStorage.getItem('CurrentUser');\n\n    if ((sessionKey !== null) && (currentUser !== null)) {\n      const userObj = JSON.parse(currentUser);\n      this.state.Services.SetUserAuth(sessionKey);\n      await this.setStateAsync({\n        SessionKey: sessionKey,\n        CurrentUser: userObj\n      });\n    }\n\n    await this.LoadCategories();\n  }\n\n  async LoadCategories() {\n    var categories = await this.state.Services.Categories.Get();\n    await this.setStateAsync({ Categories: categories });\n\n    if (categories.length > 0) {\n      await this.setStateAsync({ \n        Categories: categories,\n        SelectCategoryId: categories[0].Id \n      });\n      this.LoadImages();\n    } else {\n      await this.setStateAsync({ \n        Categories: [],\n        SelectCategoryId: -1,\n        Images: [],\n        SelectedImageId: -1\n      });\n    }\n  }\n\n  async LoadImages() {\n    if (this.state.SelectCategoryId !== -1) {\n      var images = await this.state.Services.Categories.GetImages(this.state.SelectCategoryId);\n\n      if (images.length > 0) {\n        await this.setStateAsync({\n          Images: images,\n          SelectedImageId: images[0].Id \n        });\n      } else {\n        await this.setStateAsync({\n          Images: [],\n          SelectedImageId: -1\n        });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Header \n            User={ this.state.CurrentUser } \n            OnSearch={ \n              (searchStr: string) => {\n                /*let user = new Models.User();\n                user.DisplayName = \"Fred\";\n                this.setState({ CurrentUser: user })*/\n              } \n            }\n          />\n          <Switch>\n            <Route path=\"/category/:id\">\n              <div style={{ paddingTop: '100px' }}>\n                <EditCategory \n                  Categories={ this.state.Categories } \n                  User={ this.state.CurrentUser }\n                  Services={ this.state.Services } \n                  UpdateCategories={ async (newCats: Models.Category[]) => {\n                    await this.setStateAsync({Categories: newCats});\n                  }}\n                />\n              </div>\n            </Route>\n\n            <Route path=\"/image/:id\">\n              <div style={{ paddingTop: '100px' }}>\n                <EditImage \n                  Categories={ this.state.Categories } \n                  User={ this.state.CurrentUser }\n                  Services={ this.state.Services } \n                  UpdateImages={ async () => {\n                    await this.LoadImages();\n                  }}\n                />\n              </div>\n            </Route>\n\n            <Route path=\"/newimage\">\n              <div style={{ paddingTop: '100px' }}>\n                <NewImage \n                  Categories={ this.state.Categories } \n                  User={ this.state.CurrentUser }\n                  Services={ this.state.Services } \n                  SelectCategoryId={ this.state.SelectCategoryId }\n                  UpdateImages={ async () => {\n                    await this.LoadImages();\n                  }}\n                />\n              </div>\n            </Route>\n\n\n            <Route path=\"/user\">\n              <div style={{ paddingTop: '100px' }}>\n                <User \n                  Services={ this.state.Services } \n                  CurrentUser={ this.state.CurrentUser } \n                  SessionKey={ this.state.SessionKey } \n                  OnLogin={ (loginResult: Models.LoginResult) => {\n                    localStorage.setItem('SessionKey', loginResult.SessionId);\n                    localStorage.setItem('CurrentUser', JSON.stringify(loginResult.User));\n\n                    this.state.Services.SetUserAuth(loginResult.SessionId);\n                    this.setState({\n                      SessionKey: loginResult.SessionId,\n                      CurrentUser: loginResult.User\n                    });\n                  }}\n                  OnLogout={ () => {\n                    localStorage.removeItem('SessionKey');\n                    localStorage.removeItem('CurrentUser');\n\n                    this.state.Services.SetUserAuth(null);\n                    this.setState({\n                      SessionKey: null,\n                      CurrentUser: null\n                    });\n                  }}\n                />\n              </div>\n            </Route>\n\n            <Route path=\"/\">\n              <Home \n                CurrentUser={ this.state.CurrentUser }\n                Images={ this.state.Images }\n                SelectedImageId={ this.state.SelectedImageId }\n                Categories={ this.state.Categories }\n                SelectCategoryId={ this.state.SelectCategoryId }\n                OnSetCategory={ async (categoryId: number) => {\n                  await this.setStateAsync({SelectCategoryId: categoryId})\n                  await this.LoadImages();\n                }}\n                OnSetImage={ (imageId: number) => {\n                  this.setState({SelectedImageId: imageId})\n                }}\n              />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}